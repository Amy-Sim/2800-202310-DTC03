<style>
  .my-primary {
    background-color: rgb(255, 248, 235);
  }

  .custom-remove-button {
  background-color: rgb(255, 248, 235) !important;
  }

  .btn-danger {
  background-color: rgb(255, 99, 99) !important;
  }

  .close-button {
    /* background-color: rgb(255, 99, 99) !important; */
    background-color: rgb(149, 156, 161) !important;
  }

  .add-button {
    background-color: rgb(79, 160, 102) !important;
  }

  .custom-ingredient-button {
    background-color: rgb(242, 185, 156) !important;
  }

  .custom-showMore-button {
    background-color: rgb(214, 222, 228) !important;
  }

  .modal-header-primary {
    background-color: #dfc2c4 !important;
  }

  .modal-background-primary {
    background-color: #f8f9fa !important;
  }

  .custom-border {
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  }

  .custom-header-border {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }

  .custom-pad {
    padding-left: 15px !important;
    padding-right: 15px !important;
  }
  #my_pantry_title {
    font-family: 'museo-sans-rounded', sans-serif;
    color: #e94a94;
    font-weight: bold;
  }
</style>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <title>Document</title>
</head>
<body>
  <%- include("templates/header") %>
<div class="d-flex align-items-center">
  <h2 class="mt-4 mb-3 flex-grow-1 custom-pad" id="my_pantry_title">My Pantry</h2>
  <h6 class="mt-4 mb-3">Add items</h6>
  <button id="modal-button" class="btn my-primary mt-2 custom-pad">
    <img src="/images/icon_add.png" style="width:23px; height:auto">
  </button>
</div>
<div class="table-responsive container">
  <table class="table table-sm table-light table-hover table-borderless text-center">
    <thead class="text-center table-danger">
      <tr>
        <th scope="col">Item</th>
        <th scope="col">Best Before</th>
        <th scope="col">Remove</th>
      </tr>
    </thead>
    <tbody>
      <% for (var i = 0; i < pantryItems.length; i++) { %>
        <tr>
          <td><%= pantryItems[i].food %></td>
          <td>
            <% 
              let bestBeforeDate = pantryItems[i].bestBeforeDate;
              let formattedDate;
              if (bestBeforeDate) {
                let date = pantryItems[i].bestBeforeDate; 
                let month = (date.getMonth() + 1).toString().padStart(2, '0');
                let day = date.getDate().toString().padStart(2, '0');
                let year = date.getFullYear();
                formattedDate = month + '-' + day + '-' + year;
              }
            %>
            <input id="date-<%= pantryItems[i].food %>" value="<%= formattedDate %>" onchange="updateBestBeforeDate('<%= pantryItems[i].food %>', this)" placeholder="Select date">
          </td>
          <td>
            <button id="<% pantryItems[i].food %>" data-itemid="<%= pantryItems[i].food %>" class="btn modal-body custom-remove-button" onclick="toggleSelection(this)">
              <img src="/images/icon_remove.png" style="width:23px; height:auto">
            </button>  
            </td>
        </tr>
      <% } %>
    </tbody>
  </table>
  <button type="button" class="btn btn-danger rounded-pill float-end" onclick="removeFromPantry()">Remove Selected Items</button>
</div>



<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-body-tertiary background py-2">
        <h2 class="modal-title" id="exampleModalLabel">Ingredients</h2>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body my-primary">
        <% ingredients.forEach((category) => { %>
          <div class="container pb-2 px-0 mb-3 modal-background-primary custom-border">
            <h5 class="modal-header-primary px-2 py-2 custom-header-border" style="border-bottom: solid black"><%= category.category %></h5>
            <div class="container mx-2">
              <% for (let i = 0; i < Math.min(9, category.ingredients.length); i++) { %>
                <% if (!pantryItems.some(item => item.food === category.ingredients[i])) { %>         
                  <button class="btn custom-ingredient-button rounded-pill mt-1 mb-1" id="<%= category.ingredients[i] %>" onclick="toggleSelection(this)"><%= category.ingredients[i] %></button>
                <% } %>
              <% } %>
              <% if (category.ingredients.length > 9) { %>
                <button class="btn custom-showMore-button show-more-btn rounded-pill">Show More</button>
                <div class="hidden-ingredients" style="display: none;">
                  <% for (let i = 9; i < category.ingredients.length; i++) { %>
                    <% if (!pantryItems.some(item => item.food === category.ingredients[i])) { %>    
                      <button class="btn custom-ingredient-button rounded-pill mt-1 mb-1" id="<%= category.ingredients[i] %>" onclick="toggleSelection(this)"><%= category.ingredients[i] %></button>
                    <% } %>
                  <% } %>
                </div>
              <% } %>
            </div>
          </div>
        <% }) %>
      </div>
      
      <div class="modal-footer modal-header-primary">
        <button type="button" class="btn close-button rounded-pill" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary add-button rounded-pill" onclick="saveToPantry()">Add to Pantry</button>
      </div>
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
  let username = '<%= username %>'
  let selectedIngredients = [];
  let selectedItemsToRemove = [];

  function toggleSelection(element) {
    if (element.classList.contains("custom-ingredient-button")) {
      element.classList.remove("custom-ingredient-button");
      element.classList.add("btn-success");
      selectedIngredients.push(element.id);
    } else if (element.classList.contains("btn-success")) {
      element.classList.remove("btn-success");
      element.classList.add("custom-ingredient-button");
      const index = selectedIngredients.indexOf(element.id);
      if (index > -1) {
        selectedIngredients.splice(index, 1);
      }
    } else if (element.classList.contains("custom-remove-button")) {
      element.classList.remove("custom-remove-button");
      element.classList.add("btn-danger");
      selectedItemsToRemove.push(element.getAttribute("data-itemid"));
    } else if (element.classList.contains("btn-danger")) {
      element.classList.remove("btn-danger");
      element.classList.add("custom-remove-button");
      const index = selectedItemsToRemove.indexOf(element.getAttribute("data-itemid"));
      if (index > -1) {
        selectedItemsToRemove.splice(index, 1);
      }
    }
    console.log(selectedItemsToRemove);
  }

  $(function() {
    $("input[id^='date-']").datepicker({
        minDate: 0,
        dateFormat: 'mm/dd/yy',
        onSelect: function(dateText) {
            updateBestBeforeDate(this.id.substring(5), { value: dateText }); // Call update function with selected date
        }
      });
  });



  function updateBestBeforeDate(foodName, dateInput) {
    // Convert the selected date to the format MM-DD-YYYY
    var dateParts = dateInput.value.split("-");
    var formattedDate = dateParts[1] + '/' + dateParts[2] + '/' + dateParts[0];

    // Send an AJAX request to the server to update the best before date
    $.ajax({
      url: '/update-best-before-date',
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({
        username: username, 
        foodName: foodName,
        bestBeforeDate: formattedDate
      }),
      success: function(response) {
        console.log('Successfully updated best before date');
      },
      error: function(error) {
        console.log('Error updating best before date', error);
      }
    });
  }



  function saveToPantry() {
    console.log(username);
    console.log(selectedIngredients);

    $.ajax({
      url: '/update-pantry',
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({
        username: username, 
        pantryItems: selectedIngredients.map((ingredient) => ({ 
          food: ingredient, 
        }))
      }),
      success: function(response) {
        console.log(response);
        console.log('success updating pantry')
        window.location.href = '/pantry';
      },
      error: function(error) {
        console.log(error);
        console.log('error updating pantry')
      }
    });
  }

  function removeFromPantry() {
    console.log(selectedItemsToRemove);
    $.ajax({
      url: '/remove-from-pantry',
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({
        username: username, 
        itemsToRemove: selectedItemsToRemove
      }),
      success: function(response) {
        console.log(response);
        console.log('success removing from pantry')
        window.location.href = '/pantry';
      },
      error: function(error) {
        console.log(error);
        console.log('error removing from pantry')
      }
    });
  }


  $(document).ready(function(){
    $("#modal-button").click(function(){
      $('#myModal').modal('show');
    });

  const showMoreButtons = document.querySelectorAll('.show-more-btn');

  showMoreButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const hiddenIngredients = button.nextElementSibling;
      hiddenIngredients.style.display = 'block';
      button.style.display = 'none';
      });
    });
  });
</script>

<%- include("templates/footer") %>
</body>
</html>